#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5763660217246419227) {
   out_5763660217246419227[0] = 0;
   out_5763660217246419227[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5763660217246419227[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5763660217246419227[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5763660217246419227[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5763660217246419227[5] = -sin(in_vec[1]);
   out_5763660217246419227[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5763660217246419227[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5763660217246419227[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5763660217246419227[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5763660217246419227[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5763660217246419227[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5763660217246419227[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5763660217246419227[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5763660217246419227[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5763660217246419227[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5763660217246419227[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5763660217246419227[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7984073142007517775) {
   out_7984073142007517775[0] = delta_x[0] + nom_x[0];
   out_7984073142007517775[1] = delta_x[1] + nom_x[1];
   out_7984073142007517775[2] = delta_x[2] + nom_x[2];
   out_7984073142007517775[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7984073142007517775[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7984073142007517775[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7984073142007517775[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7984073142007517775[7] = delta_x[6] + nom_x[7];
   out_7984073142007517775[8] = delta_x[7] + nom_x[8];
   out_7984073142007517775[9] = delta_x[8] + nom_x[9];
   out_7984073142007517775[10] = delta_x[9] + nom_x[10];
   out_7984073142007517775[11] = delta_x[10] + nom_x[11];
   out_7984073142007517775[12] = delta_x[11] + nom_x[12];
   out_7984073142007517775[13] = delta_x[12] + nom_x[13];
   out_7984073142007517775[14] = delta_x[13] + nom_x[14];
   out_7984073142007517775[15] = delta_x[14] + nom_x[15];
   out_7984073142007517775[16] = delta_x[15] + nom_x[16];
   out_7984073142007517775[17] = delta_x[16] + nom_x[17];
   out_7984073142007517775[18] = delta_x[17] + nom_x[18];
   out_7984073142007517775[19] = delta_x[18] + nom_x[19];
   out_7984073142007517775[20] = delta_x[19] + nom_x[20];
   out_7984073142007517775[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4505929681771980701) {
   out_4505929681771980701[0] = -nom_x[0] + true_x[0];
   out_4505929681771980701[1] = -nom_x[1] + true_x[1];
   out_4505929681771980701[2] = -nom_x[2] + true_x[2];
   out_4505929681771980701[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4505929681771980701[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4505929681771980701[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4505929681771980701[6] = -nom_x[7] + true_x[7];
   out_4505929681771980701[7] = -nom_x[8] + true_x[8];
   out_4505929681771980701[8] = -nom_x[9] + true_x[9];
   out_4505929681771980701[9] = -nom_x[10] + true_x[10];
   out_4505929681771980701[10] = -nom_x[11] + true_x[11];
   out_4505929681771980701[11] = -nom_x[12] + true_x[12];
   out_4505929681771980701[12] = -nom_x[13] + true_x[13];
   out_4505929681771980701[13] = -nom_x[14] + true_x[14];
   out_4505929681771980701[14] = -nom_x[15] + true_x[15];
   out_4505929681771980701[15] = -nom_x[16] + true_x[16];
   out_4505929681771980701[16] = -nom_x[17] + true_x[17];
   out_4505929681771980701[17] = -nom_x[18] + true_x[18];
   out_4505929681771980701[18] = -nom_x[19] + true_x[19];
   out_4505929681771980701[19] = -nom_x[20] + true_x[20];
   out_4505929681771980701[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1600126465576552008) {
   out_1600126465576552008[0] = 1.0;
   out_1600126465576552008[1] = 0;
   out_1600126465576552008[2] = 0;
   out_1600126465576552008[3] = 0;
   out_1600126465576552008[4] = 0;
   out_1600126465576552008[5] = 0;
   out_1600126465576552008[6] = 0;
   out_1600126465576552008[7] = 0;
   out_1600126465576552008[8] = 0;
   out_1600126465576552008[9] = 0;
   out_1600126465576552008[10] = 0;
   out_1600126465576552008[11] = 0;
   out_1600126465576552008[12] = 0;
   out_1600126465576552008[13] = 0;
   out_1600126465576552008[14] = 0;
   out_1600126465576552008[15] = 0;
   out_1600126465576552008[16] = 0;
   out_1600126465576552008[17] = 0;
   out_1600126465576552008[18] = 0;
   out_1600126465576552008[19] = 0;
   out_1600126465576552008[20] = 0;
   out_1600126465576552008[21] = 0;
   out_1600126465576552008[22] = 1.0;
   out_1600126465576552008[23] = 0;
   out_1600126465576552008[24] = 0;
   out_1600126465576552008[25] = 0;
   out_1600126465576552008[26] = 0;
   out_1600126465576552008[27] = 0;
   out_1600126465576552008[28] = 0;
   out_1600126465576552008[29] = 0;
   out_1600126465576552008[30] = 0;
   out_1600126465576552008[31] = 0;
   out_1600126465576552008[32] = 0;
   out_1600126465576552008[33] = 0;
   out_1600126465576552008[34] = 0;
   out_1600126465576552008[35] = 0;
   out_1600126465576552008[36] = 0;
   out_1600126465576552008[37] = 0;
   out_1600126465576552008[38] = 0;
   out_1600126465576552008[39] = 0;
   out_1600126465576552008[40] = 0;
   out_1600126465576552008[41] = 0;
   out_1600126465576552008[42] = 0;
   out_1600126465576552008[43] = 0;
   out_1600126465576552008[44] = 1.0;
   out_1600126465576552008[45] = 0;
   out_1600126465576552008[46] = 0;
   out_1600126465576552008[47] = 0;
   out_1600126465576552008[48] = 0;
   out_1600126465576552008[49] = 0;
   out_1600126465576552008[50] = 0;
   out_1600126465576552008[51] = 0;
   out_1600126465576552008[52] = 0;
   out_1600126465576552008[53] = 0;
   out_1600126465576552008[54] = 0;
   out_1600126465576552008[55] = 0;
   out_1600126465576552008[56] = 0;
   out_1600126465576552008[57] = 0;
   out_1600126465576552008[58] = 0;
   out_1600126465576552008[59] = 0;
   out_1600126465576552008[60] = 0;
   out_1600126465576552008[61] = 0;
   out_1600126465576552008[62] = 0;
   out_1600126465576552008[63] = 0;
   out_1600126465576552008[64] = 0;
   out_1600126465576552008[65] = 0;
   out_1600126465576552008[66] = -0.5*state[4];
   out_1600126465576552008[67] = -0.5*state[5];
   out_1600126465576552008[68] = -0.5*state[6];
   out_1600126465576552008[69] = 0;
   out_1600126465576552008[70] = 0;
   out_1600126465576552008[71] = 0;
   out_1600126465576552008[72] = 0;
   out_1600126465576552008[73] = 0;
   out_1600126465576552008[74] = 0;
   out_1600126465576552008[75] = 0;
   out_1600126465576552008[76] = 0;
   out_1600126465576552008[77] = 0;
   out_1600126465576552008[78] = 0;
   out_1600126465576552008[79] = 0;
   out_1600126465576552008[80] = 0;
   out_1600126465576552008[81] = 0;
   out_1600126465576552008[82] = 0;
   out_1600126465576552008[83] = 0;
   out_1600126465576552008[84] = 0;
   out_1600126465576552008[85] = 0;
   out_1600126465576552008[86] = 0;
   out_1600126465576552008[87] = 0.5*state[3];
   out_1600126465576552008[88] = 0.5*state[6];
   out_1600126465576552008[89] = -0.5*state[5];
   out_1600126465576552008[90] = 0;
   out_1600126465576552008[91] = 0;
   out_1600126465576552008[92] = 0;
   out_1600126465576552008[93] = 0;
   out_1600126465576552008[94] = 0;
   out_1600126465576552008[95] = 0;
   out_1600126465576552008[96] = 0;
   out_1600126465576552008[97] = 0;
   out_1600126465576552008[98] = 0;
   out_1600126465576552008[99] = 0;
   out_1600126465576552008[100] = 0;
   out_1600126465576552008[101] = 0;
   out_1600126465576552008[102] = 0;
   out_1600126465576552008[103] = 0;
   out_1600126465576552008[104] = 0;
   out_1600126465576552008[105] = 0;
   out_1600126465576552008[106] = 0;
   out_1600126465576552008[107] = 0;
   out_1600126465576552008[108] = -0.5*state[6];
   out_1600126465576552008[109] = 0.5*state[3];
   out_1600126465576552008[110] = 0.5*state[4];
   out_1600126465576552008[111] = 0;
   out_1600126465576552008[112] = 0;
   out_1600126465576552008[113] = 0;
   out_1600126465576552008[114] = 0;
   out_1600126465576552008[115] = 0;
   out_1600126465576552008[116] = 0;
   out_1600126465576552008[117] = 0;
   out_1600126465576552008[118] = 0;
   out_1600126465576552008[119] = 0;
   out_1600126465576552008[120] = 0;
   out_1600126465576552008[121] = 0;
   out_1600126465576552008[122] = 0;
   out_1600126465576552008[123] = 0;
   out_1600126465576552008[124] = 0;
   out_1600126465576552008[125] = 0;
   out_1600126465576552008[126] = 0;
   out_1600126465576552008[127] = 0;
   out_1600126465576552008[128] = 0;
   out_1600126465576552008[129] = 0.5*state[5];
   out_1600126465576552008[130] = -0.5*state[4];
   out_1600126465576552008[131] = 0.5*state[3];
   out_1600126465576552008[132] = 0;
   out_1600126465576552008[133] = 0;
   out_1600126465576552008[134] = 0;
   out_1600126465576552008[135] = 0;
   out_1600126465576552008[136] = 0;
   out_1600126465576552008[137] = 0;
   out_1600126465576552008[138] = 0;
   out_1600126465576552008[139] = 0;
   out_1600126465576552008[140] = 0;
   out_1600126465576552008[141] = 0;
   out_1600126465576552008[142] = 0;
   out_1600126465576552008[143] = 0;
   out_1600126465576552008[144] = 0;
   out_1600126465576552008[145] = 0;
   out_1600126465576552008[146] = 0;
   out_1600126465576552008[147] = 0;
   out_1600126465576552008[148] = 0;
   out_1600126465576552008[149] = 0;
   out_1600126465576552008[150] = 0;
   out_1600126465576552008[151] = 0;
   out_1600126465576552008[152] = 0;
   out_1600126465576552008[153] = 1.0;
   out_1600126465576552008[154] = 0;
   out_1600126465576552008[155] = 0;
   out_1600126465576552008[156] = 0;
   out_1600126465576552008[157] = 0;
   out_1600126465576552008[158] = 0;
   out_1600126465576552008[159] = 0;
   out_1600126465576552008[160] = 0;
   out_1600126465576552008[161] = 0;
   out_1600126465576552008[162] = 0;
   out_1600126465576552008[163] = 0;
   out_1600126465576552008[164] = 0;
   out_1600126465576552008[165] = 0;
   out_1600126465576552008[166] = 0;
   out_1600126465576552008[167] = 0;
   out_1600126465576552008[168] = 0;
   out_1600126465576552008[169] = 0;
   out_1600126465576552008[170] = 0;
   out_1600126465576552008[171] = 0;
   out_1600126465576552008[172] = 0;
   out_1600126465576552008[173] = 0;
   out_1600126465576552008[174] = 0;
   out_1600126465576552008[175] = 1.0;
   out_1600126465576552008[176] = 0;
   out_1600126465576552008[177] = 0;
   out_1600126465576552008[178] = 0;
   out_1600126465576552008[179] = 0;
   out_1600126465576552008[180] = 0;
   out_1600126465576552008[181] = 0;
   out_1600126465576552008[182] = 0;
   out_1600126465576552008[183] = 0;
   out_1600126465576552008[184] = 0;
   out_1600126465576552008[185] = 0;
   out_1600126465576552008[186] = 0;
   out_1600126465576552008[187] = 0;
   out_1600126465576552008[188] = 0;
   out_1600126465576552008[189] = 0;
   out_1600126465576552008[190] = 0;
   out_1600126465576552008[191] = 0;
   out_1600126465576552008[192] = 0;
   out_1600126465576552008[193] = 0;
   out_1600126465576552008[194] = 0;
   out_1600126465576552008[195] = 0;
   out_1600126465576552008[196] = 0;
   out_1600126465576552008[197] = 1.0;
   out_1600126465576552008[198] = 0;
   out_1600126465576552008[199] = 0;
   out_1600126465576552008[200] = 0;
   out_1600126465576552008[201] = 0;
   out_1600126465576552008[202] = 0;
   out_1600126465576552008[203] = 0;
   out_1600126465576552008[204] = 0;
   out_1600126465576552008[205] = 0;
   out_1600126465576552008[206] = 0;
   out_1600126465576552008[207] = 0;
   out_1600126465576552008[208] = 0;
   out_1600126465576552008[209] = 0;
   out_1600126465576552008[210] = 0;
   out_1600126465576552008[211] = 0;
   out_1600126465576552008[212] = 0;
   out_1600126465576552008[213] = 0;
   out_1600126465576552008[214] = 0;
   out_1600126465576552008[215] = 0;
   out_1600126465576552008[216] = 0;
   out_1600126465576552008[217] = 0;
   out_1600126465576552008[218] = 0;
   out_1600126465576552008[219] = 1.0;
   out_1600126465576552008[220] = 0;
   out_1600126465576552008[221] = 0;
   out_1600126465576552008[222] = 0;
   out_1600126465576552008[223] = 0;
   out_1600126465576552008[224] = 0;
   out_1600126465576552008[225] = 0;
   out_1600126465576552008[226] = 0;
   out_1600126465576552008[227] = 0;
   out_1600126465576552008[228] = 0;
   out_1600126465576552008[229] = 0;
   out_1600126465576552008[230] = 0;
   out_1600126465576552008[231] = 0;
   out_1600126465576552008[232] = 0;
   out_1600126465576552008[233] = 0;
   out_1600126465576552008[234] = 0;
   out_1600126465576552008[235] = 0;
   out_1600126465576552008[236] = 0;
   out_1600126465576552008[237] = 0;
   out_1600126465576552008[238] = 0;
   out_1600126465576552008[239] = 0;
   out_1600126465576552008[240] = 0;
   out_1600126465576552008[241] = 1.0;
   out_1600126465576552008[242] = 0;
   out_1600126465576552008[243] = 0;
   out_1600126465576552008[244] = 0;
   out_1600126465576552008[245] = 0;
   out_1600126465576552008[246] = 0;
   out_1600126465576552008[247] = 0;
   out_1600126465576552008[248] = 0;
   out_1600126465576552008[249] = 0;
   out_1600126465576552008[250] = 0;
   out_1600126465576552008[251] = 0;
   out_1600126465576552008[252] = 0;
   out_1600126465576552008[253] = 0;
   out_1600126465576552008[254] = 0;
   out_1600126465576552008[255] = 0;
   out_1600126465576552008[256] = 0;
   out_1600126465576552008[257] = 0;
   out_1600126465576552008[258] = 0;
   out_1600126465576552008[259] = 0;
   out_1600126465576552008[260] = 0;
   out_1600126465576552008[261] = 0;
   out_1600126465576552008[262] = 0;
   out_1600126465576552008[263] = 1.0;
   out_1600126465576552008[264] = 0;
   out_1600126465576552008[265] = 0;
   out_1600126465576552008[266] = 0;
   out_1600126465576552008[267] = 0;
   out_1600126465576552008[268] = 0;
   out_1600126465576552008[269] = 0;
   out_1600126465576552008[270] = 0;
   out_1600126465576552008[271] = 0;
   out_1600126465576552008[272] = 0;
   out_1600126465576552008[273] = 0;
   out_1600126465576552008[274] = 0;
   out_1600126465576552008[275] = 0;
   out_1600126465576552008[276] = 0;
   out_1600126465576552008[277] = 0;
   out_1600126465576552008[278] = 0;
   out_1600126465576552008[279] = 0;
   out_1600126465576552008[280] = 0;
   out_1600126465576552008[281] = 0;
   out_1600126465576552008[282] = 0;
   out_1600126465576552008[283] = 0;
   out_1600126465576552008[284] = 0;
   out_1600126465576552008[285] = 1.0;
   out_1600126465576552008[286] = 0;
   out_1600126465576552008[287] = 0;
   out_1600126465576552008[288] = 0;
   out_1600126465576552008[289] = 0;
   out_1600126465576552008[290] = 0;
   out_1600126465576552008[291] = 0;
   out_1600126465576552008[292] = 0;
   out_1600126465576552008[293] = 0;
   out_1600126465576552008[294] = 0;
   out_1600126465576552008[295] = 0;
   out_1600126465576552008[296] = 0;
   out_1600126465576552008[297] = 0;
   out_1600126465576552008[298] = 0;
   out_1600126465576552008[299] = 0;
   out_1600126465576552008[300] = 0;
   out_1600126465576552008[301] = 0;
   out_1600126465576552008[302] = 0;
   out_1600126465576552008[303] = 0;
   out_1600126465576552008[304] = 0;
   out_1600126465576552008[305] = 0;
   out_1600126465576552008[306] = 0;
   out_1600126465576552008[307] = 1.0;
   out_1600126465576552008[308] = 0;
   out_1600126465576552008[309] = 0;
   out_1600126465576552008[310] = 0;
   out_1600126465576552008[311] = 0;
   out_1600126465576552008[312] = 0;
   out_1600126465576552008[313] = 0;
   out_1600126465576552008[314] = 0;
   out_1600126465576552008[315] = 0;
   out_1600126465576552008[316] = 0;
   out_1600126465576552008[317] = 0;
   out_1600126465576552008[318] = 0;
   out_1600126465576552008[319] = 0;
   out_1600126465576552008[320] = 0;
   out_1600126465576552008[321] = 0;
   out_1600126465576552008[322] = 0;
   out_1600126465576552008[323] = 0;
   out_1600126465576552008[324] = 0;
   out_1600126465576552008[325] = 0;
   out_1600126465576552008[326] = 0;
   out_1600126465576552008[327] = 0;
   out_1600126465576552008[328] = 0;
   out_1600126465576552008[329] = 1.0;
   out_1600126465576552008[330] = 0;
   out_1600126465576552008[331] = 0;
   out_1600126465576552008[332] = 0;
   out_1600126465576552008[333] = 0;
   out_1600126465576552008[334] = 0;
   out_1600126465576552008[335] = 0;
   out_1600126465576552008[336] = 0;
   out_1600126465576552008[337] = 0;
   out_1600126465576552008[338] = 0;
   out_1600126465576552008[339] = 0;
   out_1600126465576552008[340] = 0;
   out_1600126465576552008[341] = 0;
   out_1600126465576552008[342] = 0;
   out_1600126465576552008[343] = 0;
   out_1600126465576552008[344] = 0;
   out_1600126465576552008[345] = 0;
   out_1600126465576552008[346] = 0;
   out_1600126465576552008[347] = 0;
   out_1600126465576552008[348] = 0;
   out_1600126465576552008[349] = 0;
   out_1600126465576552008[350] = 0;
   out_1600126465576552008[351] = 1.0;
   out_1600126465576552008[352] = 0;
   out_1600126465576552008[353] = 0;
   out_1600126465576552008[354] = 0;
   out_1600126465576552008[355] = 0;
   out_1600126465576552008[356] = 0;
   out_1600126465576552008[357] = 0;
   out_1600126465576552008[358] = 0;
   out_1600126465576552008[359] = 0;
   out_1600126465576552008[360] = 0;
   out_1600126465576552008[361] = 0;
   out_1600126465576552008[362] = 0;
   out_1600126465576552008[363] = 0;
   out_1600126465576552008[364] = 0;
   out_1600126465576552008[365] = 0;
   out_1600126465576552008[366] = 0;
   out_1600126465576552008[367] = 0;
   out_1600126465576552008[368] = 0;
   out_1600126465576552008[369] = 0;
   out_1600126465576552008[370] = 0;
   out_1600126465576552008[371] = 0;
   out_1600126465576552008[372] = 0;
   out_1600126465576552008[373] = 1.0;
   out_1600126465576552008[374] = 0;
   out_1600126465576552008[375] = 0;
   out_1600126465576552008[376] = 0;
   out_1600126465576552008[377] = 0;
   out_1600126465576552008[378] = 0;
   out_1600126465576552008[379] = 0;
   out_1600126465576552008[380] = 0;
   out_1600126465576552008[381] = 0;
   out_1600126465576552008[382] = 0;
   out_1600126465576552008[383] = 0;
   out_1600126465576552008[384] = 0;
   out_1600126465576552008[385] = 0;
   out_1600126465576552008[386] = 0;
   out_1600126465576552008[387] = 0;
   out_1600126465576552008[388] = 0;
   out_1600126465576552008[389] = 0;
   out_1600126465576552008[390] = 0;
   out_1600126465576552008[391] = 0;
   out_1600126465576552008[392] = 0;
   out_1600126465576552008[393] = 0;
   out_1600126465576552008[394] = 0;
   out_1600126465576552008[395] = 1.0;
   out_1600126465576552008[396] = 0;
   out_1600126465576552008[397] = 0;
   out_1600126465576552008[398] = 0;
   out_1600126465576552008[399] = 0;
   out_1600126465576552008[400] = 0;
   out_1600126465576552008[401] = 0;
   out_1600126465576552008[402] = 0;
   out_1600126465576552008[403] = 0;
   out_1600126465576552008[404] = 0;
   out_1600126465576552008[405] = 0;
   out_1600126465576552008[406] = 0;
   out_1600126465576552008[407] = 0;
   out_1600126465576552008[408] = 0;
   out_1600126465576552008[409] = 0;
   out_1600126465576552008[410] = 0;
   out_1600126465576552008[411] = 0;
   out_1600126465576552008[412] = 0;
   out_1600126465576552008[413] = 0;
   out_1600126465576552008[414] = 0;
   out_1600126465576552008[415] = 0;
   out_1600126465576552008[416] = 0;
   out_1600126465576552008[417] = 1.0;
   out_1600126465576552008[418] = 0;
   out_1600126465576552008[419] = 0;
   out_1600126465576552008[420] = 0;
   out_1600126465576552008[421] = 0;
   out_1600126465576552008[422] = 0;
   out_1600126465576552008[423] = 0;
   out_1600126465576552008[424] = 0;
   out_1600126465576552008[425] = 0;
   out_1600126465576552008[426] = 0;
   out_1600126465576552008[427] = 0;
   out_1600126465576552008[428] = 0;
   out_1600126465576552008[429] = 0;
   out_1600126465576552008[430] = 0;
   out_1600126465576552008[431] = 0;
   out_1600126465576552008[432] = 0;
   out_1600126465576552008[433] = 0;
   out_1600126465576552008[434] = 0;
   out_1600126465576552008[435] = 0;
   out_1600126465576552008[436] = 0;
   out_1600126465576552008[437] = 0;
   out_1600126465576552008[438] = 0;
   out_1600126465576552008[439] = 1.0;
   out_1600126465576552008[440] = 0;
   out_1600126465576552008[441] = 0;
   out_1600126465576552008[442] = 0;
   out_1600126465576552008[443] = 0;
   out_1600126465576552008[444] = 0;
   out_1600126465576552008[445] = 0;
   out_1600126465576552008[446] = 0;
   out_1600126465576552008[447] = 0;
   out_1600126465576552008[448] = 0;
   out_1600126465576552008[449] = 0;
   out_1600126465576552008[450] = 0;
   out_1600126465576552008[451] = 0;
   out_1600126465576552008[452] = 0;
   out_1600126465576552008[453] = 0;
   out_1600126465576552008[454] = 0;
   out_1600126465576552008[455] = 0;
   out_1600126465576552008[456] = 0;
   out_1600126465576552008[457] = 0;
   out_1600126465576552008[458] = 0;
   out_1600126465576552008[459] = 0;
   out_1600126465576552008[460] = 0;
   out_1600126465576552008[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4714363137519275674) {
   out_4714363137519275674[0] = dt*state[7] + state[0];
   out_4714363137519275674[1] = dt*state[8] + state[1];
   out_4714363137519275674[2] = dt*state[9] + state[2];
   out_4714363137519275674[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4714363137519275674[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4714363137519275674[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4714363137519275674[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4714363137519275674[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4714363137519275674[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4714363137519275674[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4714363137519275674[10] = state[10];
   out_4714363137519275674[11] = state[11];
   out_4714363137519275674[12] = state[12];
   out_4714363137519275674[13] = state[13];
   out_4714363137519275674[14] = state[14];
   out_4714363137519275674[15] = state[15];
   out_4714363137519275674[16] = state[16];
   out_4714363137519275674[17] = state[17];
   out_4714363137519275674[18] = state[18];
   out_4714363137519275674[19] = state[19];
   out_4714363137519275674[20] = state[20];
   out_4714363137519275674[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6365999196697241563) {
   out_6365999196697241563[0] = 1;
   out_6365999196697241563[1] = 0;
   out_6365999196697241563[2] = 0;
   out_6365999196697241563[3] = 0;
   out_6365999196697241563[4] = 0;
   out_6365999196697241563[5] = 0;
   out_6365999196697241563[6] = dt;
   out_6365999196697241563[7] = 0;
   out_6365999196697241563[8] = 0;
   out_6365999196697241563[9] = 0;
   out_6365999196697241563[10] = 0;
   out_6365999196697241563[11] = 0;
   out_6365999196697241563[12] = 0;
   out_6365999196697241563[13] = 0;
   out_6365999196697241563[14] = 0;
   out_6365999196697241563[15] = 0;
   out_6365999196697241563[16] = 0;
   out_6365999196697241563[17] = 0;
   out_6365999196697241563[18] = 0;
   out_6365999196697241563[19] = 0;
   out_6365999196697241563[20] = 0;
   out_6365999196697241563[21] = 0;
   out_6365999196697241563[22] = 1;
   out_6365999196697241563[23] = 0;
   out_6365999196697241563[24] = 0;
   out_6365999196697241563[25] = 0;
   out_6365999196697241563[26] = 0;
   out_6365999196697241563[27] = 0;
   out_6365999196697241563[28] = dt;
   out_6365999196697241563[29] = 0;
   out_6365999196697241563[30] = 0;
   out_6365999196697241563[31] = 0;
   out_6365999196697241563[32] = 0;
   out_6365999196697241563[33] = 0;
   out_6365999196697241563[34] = 0;
   out_6365999196697241563[35] = 0;
   out_6365999196697241563[36] = 0;
   out_6365999196697241563[37] = 0;
   out_6365999196697241563[38] = 0;
   out_6365999196697241563[39] = 0;
   out_6365999196697241563[40] = 0;
   out_6365999196697241563[41] = 0;
   out_6365999196697241563[42] = 0;
   out_6365999196697241563[43] = 0;
   out_6365999196697241563[44] = 1;
   out_6365999196697241563[45] = 0;
   out_6365999196697241563[46] = 0;
   out_6365999196697241563[47] = 0;
   out_6365999196697241563[48] = 0;
   out_6365999196697241563[49] = 0;
   out_6365999196697241563[50] = dt;
   out_6365999196697241563[51] = 0;
   out_6365999196697241563[52] = 0;
   out_6365999196697241563[53] = 0;
   out_6365999196697241563[54] = 0;
   out_6365999196697241563[55] = 0;
   out_6365999196697241563[56] = 0;
   out_6365999196697241563[57] = 0;
   out_6365999196697241563[58] = 0;
   out_6365999196697241563[59] = 0;
   out_6365999196697241563[60] = 0;
   out_6365999196697241563[61] = 0;
   out_6365999196697241563[62] = 0;
   out_6365999196697241563[63] = 0;
   out_6365999196697241563[64] = 0;
   out_6365999196697241563[65] = 0;
   out_6365999196697241563[66] = 1;
   out_6365999196697241563[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6365999196697241563[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6365999196697241563[69] = 0;
   out_6365999196697241563[70] = 0;
   out_6365999196697241563[71] = 0;
   out_6365999196697241563[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6365999196697241563[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6365999196697241563[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6365999196697241563[75] = 0;
   out_6365999196697241563[76] = 0;
   out_6365999196697241563[77] = 0;
   out_6365999196697241563[78] = 0;
   out_6365999196697241563[79] = 0;
   out_6365999196697241563[80] = 0;
   out_6365999196697241563[81] = 0;
   out_6365999196697241563[82] = 0;
   out_6365999196697241563[83] = 0;
   out_6365999196697241563[84] = 0;
   out_6365999196697241563[85] = 0;
   out_6365999196697241563[86] = 0;
   out_6365999196697241563[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6365999196697241563[88] = 1;
   out_6365999196697241563[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6365999196697241563[90] = 0;
   out_6365999196697241563[91] = 0;
   out_6365999196697241563[92] = 0;
   out_6365999196697241563[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6365999196697241563[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6365999196697241563[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6365999196697241563[96] = 0;
   out_6365999196697241563[97] = 0;
   out_6365999196697241563[98] = 0;
   out_6365999196697241563[99] = 0;
   out_6365999196697241563[100] = 0;
   out_6365999196697241563[101] = 0;
   out_6365999196697241563[102] = 0;
   out_6365999196697241563[103] = 0;
   out_6365999196697241563[104] = 0;
   out_6365999196697241563[105] = 0;
   out_6365999196697241563[106] = 0;
   out_6365999196697241563[107] = 0;
   out_6365999196697241563[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6365999196697241563[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6365999196697241563[110] = 1;
   out_6365999196697241563[111] = 0;
   out_6365999196697241563[112] = 0;
   out_6365999196697241563[113] = 0;
   out_6365999196697241563[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6365999196697241563[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6365999196697241563[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6365999196697241563[117] = 0;
   out_6365999196697241563[118] = 0;
   out_6365999196697241563[119] = 0;
   out_6365999196697241563[120] = 0;
   out_6365999196697241563[121] = 0;
   out_6365999196697241563[122] = 0;
   out_6365999196697241563[123] = 0;
   out_6365999196697241563[124] = 0;
   out_6365999196697241563[125] = 0;
   out_6365999196697241563[126] = 0;
   out_6365999196697241563[127] = 0;
   out_6365999196697241563[128] = 0;
   out_6365999196697241563[129] = 0;
   out_6365999196697241563[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6365999196697241563[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6365999196697241563[132] = 1;
   out_6365999196697241563[133] = 0;
   out_6365999196697241563[134] = 0;
   out_6365999196697241563[135] = 0;
   out_6365999196697241563[136] = 0;
   out_6365999196697241563[137] = 0;
   out_6365999196697241563[138] = 0;
   out_6365999196697241563[139] = 0;
   out_6365999196697241563[140] = 0;
   out_6365999196697241563[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6365999196697241563[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6365999196697241563[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6365999196697241563[144] = 0;
   out_6365999196697241563[145] = 0;
   out_6365999196697241563[146] = 0;
   out_6365999196697241563[147] = 0;
   out_6365999196697241563[148] = 0;
   out_6365999196697241563[149] = 0;
   out_6365999196697241563[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6365999196697241563[151] = 0;
   out_6365999196697241563[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6365999196697241563[153] = 0;
   out_6365999196697241563[154] = 1;
   out_6365999196697241563[155] = 0;
   out_6365999196697241563[156] = 0;
   out_6365999196697241563[157] = 0;
   out_6365999196697241563[158] = 0;
   out_6365999196697241563[159] = 0;
   out_6365999196697241563[160] = 0;
   out_6365999196697241563[161] = 0;
   out_6365999196697241563[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6365999196697241563[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6365999196697241563[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6365999196697241563[165] = 0;
   out_6365999196697241563[166] = 0;
   out_6365999196697241563[167] = 0;
   out_6365999196697241563[168] = 0;
   out_6365999196697241563[169] = 0;
   out_6365999196697241563[170] = 0;
   out_6365999196697241563[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6365999196697241563[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6365999196697241563[173] = 0;
   out_6365999196697241563[174] = 0;
   out_6365999196697241563[175] = 0;
   out_6365999196697241563[176] = 1;
   out_6365999196697241563[177] = 0;
   out_6365999196697241563[178] = 0;
   out_6365999196697241563[179] = 0;
   out_6365999196697241563[180] = 0;
   out_6365999196697241563[181] = 0;
   out_6365999196697241563[182] = 0;
   out_6365999196697241563[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6365999196697241563[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6365999196697241563[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6365999196697241563[186] = 0;
   out_6365999196697241563[187] = 0;
   out_6365999196697241563[188] = 0;
   out_6365999196697241563[189] = 0;
   out_6365999196697241563[190] = 0;
   out_6365999196697241563[191] = 0;
   out_6365999196697241563[192] = 0;
   out_6365999196697241563[193] = 0;
   out_6365999196697241563[194] = 0;
   out_6365999196697241563[195] = 0;
   out_6365999196697241563[196] = 0;
   out_6365999196697241563[197] = 0;
   out_6365999196697241563[198] = 1;
   out_6365999196697241563[199] = 0;
   out_6365999196697241563[200] = 0;
   out_6365999196697241563[201] = 0;
   out_6365999196697241563[202] = 0;
   out_6365999196697241563[203] = 0;
   out_6365999196697241563[204] = 0;
   out_6365999196697241563[205] = 0;
   out_6365999196697241563[206] = 0;
   out_6365999196697241563[207] = 0;
   out_6365999196697241563[208] = 0;
   out_6365999196697241563[209] = 0;
   out_6365999196697241563[210] = 0;
   out_6365999196697241563[211] = 0;
   out_6365999196697241563[212] = 0;
   out_6365999196697241563[213] = 0;
   out_6365999196697241563[214] = 0;
   out_6365999196697241563[215] = 0;
   out_6365999196697241563[216] = 0;
   out_6365999196697241563[217] = 0;
   out_6365999196697241563[218] = 0;
   out_6365999196697241563[219] = 0;
   out_6365999196697241563[220] = 1;
   out_6365999196697241563[221] = 0;
   out_6365999196697241563[222] = 0;
   out_6365999196697241563[223] = 0;
   out_6365999196697241563[224] = 0;
   out_6365999196697241563[225] = 0;
   out_6365999196697241563[226] = 0;
   out_6365999196697241563[227] = 0;
   out_6365999196697241563[228] = 0;
   out_6365999196697241563[229] = 0;
   out_6365999196697241563[230] = 0;
   out_6365999196697241563[231] = 0;
   out_6365999196697241563[232] = 0;
   out_6365999196697241563[233] = 0;
   out_6365999196697241563[234] = 0;
   out_6365999196697241563[235] = 0;
   out_6365999196697241563[236] = 0;
   out_6365999196697241563[237] = 0;
   out_6365999196697241563[238] = 0;
   out_6365999196697241563[239] = 0;
   out_6365999196697241563[240] = 0;
   out_6365999196697241563[241] = 0;
   out_6365999196697241563[242] = 1;
   out_6365999196697241563[243] = 0;
   out_6365999196697241563[244] = 0;
   out_6365999196697241563[245] = 0;
   out_6365999196697241563[246] = 0;
   out_6365999196697241563[247] = 0;
   out_6365999196697241563[248] = 0;
   out_6365999196697241563[249] = 0;
   out_6365999196697241563[250] = 0;
   out_6365999196697241563[251] = 0;
   out_6365999196697241563[252] = 0;
   out_6365999196697241563[253] = 0;
   out_6365999196697241563[254] = 0;
   out_6365999196697241563[255] = 0;
   out_6365999196697241563[256] = 0;
   out_6365999196697241563[257] = 0;
   out_6365999196697241563[258] = 0;
   out_6365999196697241563[259] = 0;
   out_6365999196697241563[260] = 0;
   out_6365999196697241563[261] = 0;
   out_6365999196697241563[262] = 0;
   out_6365999196697241563[263] = 0;
   out_6365999196697241563[264] = 1;
   out_6365999196697241563[265] = 0;
   out_6365999196697241563[266] = 0;
   out_6365999196697241563[267] = 0;
   out_6365999196697241563[268] = 0;
   out_6365999196697241563[269] = 0;
   out_6365999196697241563[270] = 0;
   out_6365999196697241563[271] = 0;
   out_6365999196697241563[272] = 0;
   out_6365999196697241563[273] = 0;
   out_6365999196697241563[274] = 0;
   out_6365999196697241563[275] = 0;
   out_6365999196697241563[276] = 0;
   out_6365999196697241563[277] = 0;
   out_6365999196697241563[278] = 0;
   out_6365999196697241563[279] = 0;
   out_6365999196697241563[280] = 0;
   out_6365999196697241563[281] = 0;
   out_6365999196697241563[282] = 0;
   out_6365999196697241563[283] = 0;
   out_6365999196697241563[284] = 0;
   out_6365999196697241563[285] = 0;
   out_6365999196697241563[286] = 1;
   out_6365999196697241563[287] = 0;
   out_6365999196697241563[288] = 0;
   out_6365999196697241563[289] = 0;
   out_6365999196697241563[290] = 0;
   out_6365999196697241563[291] = 0;
   out_6365999196697241563[292] = 0;
   out_6365999196697241563[293] = 0;
   out_6365999196697241563[294] = 0;
   out_6365999196697241563[295] = 0;
   out_6365999196697241563[296] = 0;
   out_6365999196697241563[297] = 0;
   out_6365999196697241563[298] = 0;
   out_6365999196697241563[299] = 0;
   out_6365999196697241563[300] = 0;
   out_6365999196697241563[301] = 0;
   out_6365999196697241563[302] = 0;
   out_6365999196697241563[303] = 0;
   out_6365999196697241563[304] = 0;
   out_6365999196697241563[305] = 0;
   out_6365999196697241563[306] = 0;
   out_6365999196697241563[307] = 0;
   out_6365999196697241563[308] = 1;
   out_6365999196697241563[309] = 0;
   out_6365999196697241563[310] = 0;
   out_6365999196697241563[311] = 0;
   out_6365999196697241563[312] = 0;
   out_6365999196697241563[313] = 0;
   out_6365999196697241563[314] = 0;
   out_6365999196697241563[315] = 0;
   out_6365999196697241563[316] = 0;
   out_6365999196697241563[317] = 0;
   out_6365999196697241563[318] = 0;
   out_6365999196697241563[319] = 0;
   out_6365999196697241563[320] = 0;
   out_6365999196697241563[321] = 0;
   out_6365999196697241563[322] = 0;
   out_6365999196697241563[323] = 0;
   out_6365999196697241563[324] = 0;
   out_6365999196697241563[325] = 0;
   out_6365999196697241563[326] = 0;
   out_6365999196697241563[327] = 0;
   out_6365999196697241563[328] = 0;
   out_6365999196697241563[329] = 0;
   out_6365999196697241563[330] = 1;
   out_6365999196697241563[331] = 0;
   out_6365999196697241563[332] = 0;
   out_6365999196697241563[333] = 0;
   out_6365999196697241563[334] = 0;
   out_6365999196697241563[335] = 0;
   out_6365999196697241563[336] = 0;
   out_6365999196697241563[337] = 0;
   out_6365999196697241563[338] = 0;
   out_6365999196697241563[339] = 0;
   out_6365999196697241563[340] = 0;
   out_6365999196697241563[341] = 0;
   out_6365999196697241563[342] = 0;
   out_6365999196697241563[343] = 0;
   out_6365999196697241563[344] = 0;
   out_6365999196697241563[345] = 0;
   out_6365999196697241563[346] = 0;
   out_6365999196697241563[347] = 0;
   out_6365999196697241563[348] = 0;
   out_6365999196697241563[349] = 0;
   out_6365999196697241563[350] = 0;
   out_6365999196697241563[351] = 0;
   out_6365999196697241563[352] = 1;
   out_6365999196697241563[353] = 0;
   out_6365999196697241563[354] = 0;
   out_6365999196697241563[355] = 0;
   out_6365999196697241563[356] = 0;
   out_6365999196697241563[357] = 0;
   out_6365999196697241563[358] = 0;
   out_6365999196697241563[359] = 0;
   out_6365999196697241563[360] = 0;
   out_6365999196697241563[361] = 0;
   out_6365999196697241563[362] = 0;
   out_6365999196697241563[363] = 0;
   out_6365999196697241563[364] = 0;
   out_6365999196697241563[365] = 0;
   out_6365999196697241563[366] = 0;
   out_6365999196697241563[367] = 0;
   out_6365999196697241563[368] = 0;
   out_6365999196697241563[369] = 0;
   out_6365999196697241563[370] = 0;
   out_6365999196697241563[371] = 0;
   out_6365999196697241563[372] = 0;
   out_6365999196697241563[373] = 0;
   out_6365999196697241563[374] = 1;
   out_6365999196697241563[375] = 0;
   out_6365999196697241563[376] = 0;
   out_6365999196697241563[377] = 0;
   out_6365999196697241563[378] = 0;
   out_6365999196697241563[379] = 0;
   out_6365999196697241563[380] = 0;
   out_6365999196697241563[381] = 0;
   out_6365999196697241563[382] = 0;
   out_6365999196697241563[383] = 0;
   out_6365999196697241563[384] = 0;
   out_6365999196697241563[385] = 0;
   out_6365999196697241563[386] = 0;
   out_6365999196697241563[387] = 0;
   out_6365999196697241563[388] = 0;
   out_6365999196697241563[389] = 0;
   out_6365999196697241563[390] = 0;
   out_6365999196697241563[391] = 0;
   out_6365999196697241563[392] = 0;
   out_6365999196697241563[393] = 0;
   out_6365999196697241563[394] = 0;
   out_6365999196697241563[395] = 0;
   out_6365999196697241563[396] = 1;
   out_6365999196697241563[397] = 0;
   out_6365999196697241563[398] = 0;
   out_6365999196697241563[399] = 0;
   out_6365999196697241563[400] = 0;
   out_6365999196697241563[401] = 0;
   out_6365999196697241563[402] = 0;
   out_6365999196697241563[403] = 0;
   out_6365999196697241563[404] = 0;
   out_6365999196697241563[405] = 0;
   out_6365999196697241563[406] = 0;
   out_6365999196697241563[407] = 0;
   out_6365999196697241563[408] = 0;
   out_6365999196697241563[409] = 0;
   out_6365999196697241563[410] = 0;
   out_6365999196697241563[411] = 0;
   out_6365999196697241563[412] = 0;
   out_6365999196697241563[413] = 0;
   out_6365999196697241563[414] = 0;
   out_6365999196697241563[415] = 0;
   out_6365999196697241563[416] = 0;
   out_6365999196697241563[417] = 0;
   out_6365999196697241563[418] = 1;
   out_6365999196697241563[419] = 0;
   out_6365999196697241563[420] = 0;
   out_6365999196697241563[421] = 0;
   out_6365999196697241563[422] = 0;
   out_6365999196697241563[423] = 0;
   out_6365999196697241563[424] = 0;
   out_6365999196697241563[425] = 0;
   out_6365999196697241563[426] = 0;
   out_6365999196697241563[427] = 0;
   out_6365999196697241563[428] = 0;
   out_6365999196697241563[429] = 0;
   out_6365999196697241563[430] = 0;
   out_6365999196697241563[431] = 0;
   out_6365999196697241563[432] = 0;
   out_6365999196697241563[433] = 0;
   out_6365999196697241563[434] = 0;
   out_6365999196697241563[435] = 0;
   out_6365999196697241563[436] = 0;
   out_6365999196697241563[437] = 0;
   out_6365999196697241563[438] = 0;
   out_6365999196697241563[439] = 0;
   out_6365999196697241563[440] = 1;
}
void h_4(double *state, double *unused, double *out_8654380828745342908) {
   out_8654380828745342908[0] = state[10] + state[13];
   out_8654380828745342908[1] = state[11] + state[14];
   out_8654380828745342908[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1277555590207695814) {
   out_1277555590207695814[0] = 0;
   out_1277555590207695814[1] = 0;
   out_1277555590207695814[2] = 0;
   out_1277555590207695814[3] = 0;
   out_1277555590207695814[4] = 0;
   out_1277555590207695814[5] = 0;
   out_1277555590207695814[6] = 0;
   out_1277555590207695814[7] = 0;
   out_1277555590207695814[8] = 0;
   out_1277555590207695814[9] = 0;
   out_1277555590207695814[10] = 1;
   out_1277555590207695814[11] = 0;
   out_1277555590207695814[12] = 0;
   out_1277555590207695814[13] = 1;
   out_1277555590207695814[14] = 0;
   out_1277555590207695814[15] = 0;
   out_1277555590207695814[16] = 0;
   out_1277555590207695814[17] = 0;
   out_1277555590207695814[18] = 0;
   out_1277555590207695814[19] = 0;
   out_1277555590207695814[20] = 0;
   out_1277555590207695814[21] = 0;
   out_1277555590207695814[22] = 0;
   out_1277555590207695814[23] = 0;
   out_1277555590207695814[24] = 0;
   out_1277555590207695814[25] = 0;
   out_1277555590207695814[26] = 0;
   out_1277555590207695814[27] = 0;
   out_1277555590207695814[28] = 0;
   out_1277555590207695814[29] = 0;
   out_1277555590207695814[30] = 0;
   out_1277555590207695814[31] = 0;
   out_1277555590207695814[32] = 0;
   out_1277555590207695814[33] = 1;
   out_1277555590207695814[34] = 0;
   out_1277555590207695814[35] = 0;
   out_1277555590207695814[36] = 1;
   out_1277555590207695814[37] = 0;
   out_1277555590207695814[38] = 0;
   out_1277555590207695814[39] = 0;
   out_1277555590207695814[40] = 0;
   out_1277555590207695814[41] = 0;
   out_1277555590207695814[42] = 0;
   out_1277555590207695814[43] = 0;
   out_1277555590207695814[44] = 0;
   out_1277555590207695814[45] = 0;
   out_1277555590207695814[46] = 0;
   out_1277555590207695814[47] = 0;
   out_1277555590207695814[48] = 0;
   out_1277555590207695814[49] = 0;
   out_1277555590207695814[50] = 0;
   out_1277555590207695814[51] = 0;
   out_1277555590207695814[52] = 0;
   out_1277555590207695814[53] = 0;
   out_1277555590207695814[54] = 0;
   out_1277555590207695814[55] = 0;
   out_1277555590207695814[56] = 1;
   out_1277555590207695814[57] = 0;
   out_1277555590207695814[58] = 0;
   out_1277555590207695814[59] = 1;
   out_1277555590207695814[60] = 0;
   out_1277555590207695814[61] = 0;
   out_1277555590207695814[62] = 0;
   out_1277555590207695814[63] = 0;
   out_1277555590207695814[64] = 0;
   out_1277555590207695814[65] = 0;
}
void h_9(double *state, double *unused, double *out_7516788848090321369) {
   out_7516788848090321369[0] = state[10];
   out_7516788848090321369[1] = state[11];
   out_7516788848090321369[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1036365943578105169) {
   out_1036365943578105169[0] = 0;
   out_1036365943578105169[1] = 0;
   out_1036365943578105169[2] = 0;
   out_1036365943578105169[3] = 0;
   out_1036365943578105169[4] = 0;
   out_1036365943578105169[5] = 0;
   out_1036365943578105169[6] = 0;
   out_1036365943578105169[7] = 0;
   out_1036365943578105169[8] = 0;
   out_1036365943578105169[9] = 0;
   out_1036365943578105169[10] = 1;
   out_1036365943578105169[11] = 0;
   out_1036365943578105169[12] = 0;
   out_1036365943578105169[13] = 0;
   out_1036365943578105169[14] = 0;
   out_1036365943578105169[15] = 0;
   out_1036365943578105169[16] = 0;
   out_1036365943578105169[17] = 0;
   out_1036365943578105169[18] = 0;
   out_1036365943578105169[19] = 0;
   out_1036365943578105169[20] = 0;
   out_1036365943578105169[21] = 0;
   out_1036365943578105169[22] = 0;
   out_1036365943578105169[23] = 0;
   out_1036365943578105169[24] = 0;
   out_1036365943578105169[25] = 0;
   out_1036365943578105169[26] = 0;
   out_1036365943578105169[27] = 0;
   out_1036365943578105169[28] = 0;
   out_1036365943578105169[29] = 0;
   out_1036365943578105169[30] = 0;
   out_1036365943578105169[31] = 0;
   out_1036365943578105169[32] = 0;
   out_1036365943578105169[33] = 1;
   out_1036365943578105169[34] = 0;
   out_1036365943578105169[35] = 0;
   out_1036365943578105169[36] = 0;
   out_1036365943578105169[37] = 0;
   out_1036365943578105169[38] = 0;
   out_1036365943578105169[39] = 0;
   out_1036365943578105169[40] = 0;
   out_1036365943578105169[41] = 0;
   out_1036365943578105169[42] = 0;
   out_1036365943578105169[43] = 0;
   out_1036365943578105169[44] = 0;
   out_1036365943578105169[45] = 0;
   out_1036365943578105169[46] = 0;
   out_1036365943578105169[47] = 0;
   out_1036365943578105169[48] = 0;
   out_1036365943578105169[49] = 0;
   out_1036365943578105169[50] = 0;
   out_1036365943578105169[51] = 0;
   out_1036365943578105169[52] = 0;
   out_1036365943578105169[53] = 0;
   out_1036365943578105169[54] = 0;
   out_1036365943578105169[55] = 0;
   out_1036365943578105169[56] = 1;
   out_1036365943578105169[57] = 0;
   out_1036365943578105169[58] = 0;
   out_1036365943578105169[59] = 0;
   out_1036365943578105169[60] = 0;
   out_1036365943578105169[61] = 0;
   out_1036365943578105169[62] = 0;
   out_1036365943578105169[63] = 0;
   out_1036365943578105169[64] = 0;
   out_1036365943578105169[65] = 0;
}
void h_10(double *state, double *unused, double *out_5089843156482325694) {
   out_5089843156482325694[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5089843156482325694[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5089843156482325694[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1789498124346718583) {
   out_1789498124346718583[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1789498124346718583[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1789498124346718583[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1789498124346718583[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1789498124346718583[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1789498124346718583[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1789498124346718583[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1789498124346718583[7] = 0;
   out_1789498124346718583[8] = 0;
   out_1789498124346718583[9] = 0;
   out_1789498124346718583[10] = 0;
   out_1789498124346718583[11] = 0;
   out_1789498124346718583[12] = 0;
   out_1789498124346718583[13] = 0;
   out_1789498124346718583[14] = 0;
   out_1789498124346718583[15] = 0;
   out_1789498124346718583[16] = 1;
   out_1789498124346718583[17] = 0;
   out_1789498124346718583[18] = 0;
   out_1789498124346718583[19] = 1;
   out_1789498124346718583[20] = 0;
   out_1789498124346718583[21] = 0;
   out_1789498124346718583[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1789498124346718583[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1789498124346718583[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1789498124346718583[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1789498124346718583[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1789498124346718583[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1789498124346718583[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1789498124346718583[29] = 0;
   out_1789498124346718583[30] = 0;
   out_1789498124346718583[31] = 0;
   out_1789498124346718583[32] = 0;
   out_1789498124346718583[33] = 0;
   out_1789498124346718583[34] = 0;
   out_1789498124346718583[35] = 0;
   out_1789498124346718583[36] = 0;
   out_1789498124346718583[37] = 0;
   out_1789498124346718583[38] = 0;
   out_1789498124346718583[39] = 1;
   out_1789498124346718583[40] = 0;
   out_1789498124346718583[41] = 0;
   out_1789498124346718583[42] = 1;
   out_1789498124346718583[43] = 0;
   out_1789498124346718583[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1789498124346718583[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1789498124346718583[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1789498124346718583[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1789498124346718583[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1789498124346718583[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1789498124346718583[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1789498124346718583[51] = 0;
   out_1789498124346718583[52] = 0;
   out_1789498124346718583[53] = 0;
   out_1789498124346718583[54] = 0;
   out_1789498124346718583[55] = 0;
   out_1789498124346718583[56] = 0;
   out_1789498124346718583[57] = 0;
   out_1789498124346718583[58] = 0;
   out_1789498124346718583[59] = 0;
   out_1789498124346718583[60] = 0;
   out_1789498124346718583[61] = 0;
   out_1789498124346718583[62] = 1;
   out_1789498124346718583[63] = 0;
   out_1789498124346718583[64] = 0;
   out_1789498124346718583[65] = 1;
}
void h_12(double *state, double *unused, double *out_2468563075831269207) {
   out_2468563075831269207[0] = state[0];
   out_2468563075831269207[1] = state[1];
   out_2468563075831269207[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3741900817824265981) {
   out_3741900817824265981[0] = 1;
   out_3741900817824265981[1] = 0;
   out_3741900817824265981[2] = 0;
   out_3741900817824265981[3] = 0;
   out_3741900817824265981[4] = 0;
   out_3741900817824265981[5] = 0;
   out_3741900817824265981[6] = 0;
   out_3741900817824265981[7] = 0;
   out_3741900817824265981[8] = 0;
   out_3741900817824265981[9] = 0;
   out_3741900817824265981[10] = 0;
   out_3741900817824265981[11] = 0;
   out_3741900817824265981[12] = 0;
   out_3741900817824265981[13] = 0;
   out_3741900817824265981[14] = 0;
   out_3741900817824265981[15] = 0;
   out_3741900817824265981[16] = 0;
   out_3741900817824265981[17] = 0;
   out_3741900817824265981[18] = 0;
   out_3741900817824265981[19] = 0;
   out_3741900817824265981[20] = 0;
   out_3741900817824265981[21] = 0;
   out_3741900817824265981[22] = 0;
   out_3741900817824265981[23] = 1;
   out_3741900817824265981[24] = 0;
   out_3741900817824265981[25] = 0;
   out_3741900817824265981[26] = 0;
   out_3741900817824265981[27] = 0;
   out_3741900817824265981[28] = 0;
   out_3741900817824265981[29] = 0;
   out_3741900817824265981[30] = 0;
   out_3741900817824265981[31] = 0;
   out_3741900817824265981[32] = 0;
   out_3741900817824265981[33] = 0;
   out_3741900817824265981[34] = 0;
   out_3741900817824265981[35] = 0;
   out_3741900817824265981[36] = 0;
   out_3741900817824265981[37] = 0;
   out_3741900817824265981[38] = 0;
   out_3741900817824265981[39] = 0;
   out_3741900817824265981[40] = 0;
   out_3741900817824265981[41] = 0;
   out_3741900817824265981[42] = 0;
   out_3741900817824265981[43] = 0;
   out_3741900817824265981[44] = 0;
   out_3741900817824265981[45] = 0;
   out_3741900817824265981[46] = 1;
   out_3741900817824265981[47] = 0;
   out_3741900817824265981[48] = 0;
   out_3741900817824265981[49] = 0;
   out_3741900817824265981[50] = 0;
   out_3741900817824265981[51] = 0;
   out_3741900817824265981[52] = 0;
   out_3741900817824265981[53] = 0;
   out_3741900817824265981[54] = 0;
   out_3741900817824265981[55] = 0;
   out_3741900817824265981[56] = 0;
   out_3741900817824265981[57] = 0;
   out_3741900817824265981[58] = 0;
   out_3741900817824265981[59] = 0;
   out_3741900817824265981[60] = 0;
   out_3741900817824265981[61] = 0;
   out_3741900817824265981[62] = 0;
   out_3741900817824265981[63] = 0;
   out_3741900817824265981[64] = 0;
   out_3741900817824265981[65] = 0;
}
void h_35(double *state, double *unused, double *out_9035519326057673557) {
   out_9035519326057673557[0] = state[7];
   out_9035519326057673557[1] = state[8];
   out_9035519326057673557[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6487463850149279690) {
   out_6487463850149279690[0] = 0;
   out_6487463850149279690[1] = 0;
   out_6487463850149279690[2] = 0;
   out_6487463850149279690[3] = 0;
   out_6487463850149279690[4] = 0;
   out_6487463850149279690[5] = 0;
   out_6487463850149279690[6] = 0;
   out_6487463850149279690[7] = 1;
   out_6487463850149279690[8] = 0;
   out_6487463850149279690[9] = 0;
   out_6487463850149279690[10] = 0;
   out_6487463850149279690[11] = 0;
   out_6487463850149279690[12] = 0;
   out_6487463850149279690[13] = 0;
   out_6487463850149279690[14] = 0;
   out_6487463850149279690[15] = 0;
   out_6487463850149279690[16] = 0;
   out_6487463850149279690[17] = 0;
   out_6487463850149279690[18] = 0;
   out_6487463850149279690[19] = 0;
   out_6487463850149279690[20] = 0;
   out_6487463850149279690[21] = 0;
   out_6487463850149279690[22] = 0;
   out_6487463850149279690[23] = 0;
   out_6487463850149279690[24] = 0;
   out_6487463850149279690[25] = 0;
   out_6487463850149279690[26] = 0;
   out_6487463850149279690[27] = 0;
   out_6487463850149279690[28] = 0;
   out_6487463850149279690[29] = 0;
   out_6487463850149279690[30] = 1;
   out_6487463850149279690[31] = 0;
   out_6487463850149279690[32] = 0;
   out_6487463850149279690[33] = 0;
   out_6487463850149279690[34] = 0;
   out_6487463850149279690[35] = 0;
   out_6487463850149279690[36] = 0;
   out_6487463850149279690[37] = 0;
   out_6487463850149279690[38] = 0;
   out_6487463850149279690[39] = 0;
   out_6487463850149279690[40] = 0;
   out_6487463850149279690[41] = 0;
   out_6487463850149279690[42] = 0;
   out_6487463850149279690[43] = 0;
   out_6487463850149279690[44] = 0;
   out_6487463850149279690[45] = 0;
   out_6487463850149279690[46] = 0;
   out_6487463850149279690[47] = 0;
   out_6487463850149279690[48] = 0;
   out_6487463850149279690[49] = 0;
   out_6487463850149279690[50] = 0;
   out_6487463850149279690[51] = 0;
   out_6487463850149279690[52] = 0;
   out_6487463850149279690[53] = 1;
   out_6487463850149279690[54] = 0;
   out_6487463850149279690[55] = 0;
   out_6487463850149279690[56] = 0;
   out_6487463850149279690[57] = 0;
   out_6487463850149279690[58] = 0;
   out_6487463850149279690[59] = 0;
   out_6487463850149279690[60] = 0;
   out_6487463850149279690[61] = 0;
   out_6487463850149279690[62] = 0;
   out_6487463850149279690[63] = 0;
   out_6487463850149279690[64] = 0;
   out_6487463850149279690[65] = 0;
}
void h_32(double *state, double *unused, double *out_2998224959805740489) {
   out_2998224959805740489[0] = state[3];
   out_2998224959805740489[1] = state[4];
   out_2998224959805740489[2] = state[5];
   out_2998224959805740489[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2220271252105652031) {
   out_2220271252105652031[0] = 0;
   out_2220271252105652031[1] = 0;
   out_2220271252105652031[2] = 0;
   out_2220271252105652031[3] = 1;
   out_2220271252105652031[4] = 0;
   out_2220271252105652031[5] = 0;
   out_2220271252105652031[6] = 0;
   out_2220271252105652031[7] = 0;
   out_2220271252105652031[8] = 0;
   out_2220271252105652031[9] = 0;
   out_2220271252105652031[10] = 0;
   out_2220271252105652031[11] = 0;
   out_2220271252105652031[12] = 0;
   out_2220271252105652031[13] = 0;
   out_2220271252105652031[14] = 0;
   out_2220271252105652031[15] = 0;
   out_2220271252105652031[16] = 0;
   out_2220271252105652031[17] = 0;
   out_2220271252105652031[18] = 0;
   out_2220271252105652031[19] = 0;
   out_2220271252105652031[20] = 0;
   out_2220271252105652031[21] = 0;
   out_2220271252105652031[22] = 0;
   out_2220271252105652031[23] = 0;
   out_2220271252105652031[24] = 0;
   out_2220271252105652031[25] = 0;
   out_2220271252105652031[26] = 1;
   out_2220271252105652031[27] = 0;
   out_2220271252105652031[28] = 0;
   out_2220271252105652031[29] = 0;
   out_2220271252105652031[30] = 0;
   out_2220271252105652031[31] = 0;
   out_2220271252105652031[32] = 0;
   out_2220271252105652031[33] = 0;
   out_2220271252105652031[34] = 0;
   out_2220271252105652031[35] = 0;
   out_2220271252105652031[36] = 0;
   out_2220271252105652031[37] = 0;
   out_2220271252105652031[38] = 0;
   out_2220271252105652031[39] = 0;
   out_2220271252105652031[40] = 0;
   out_2220271252105652031[41] = 0;
   out_2220271252105652031[42] = 0;
   out_2220271252105652031[43] = 0;
   out_2220271252105652031[44] = 0;
   out_2220271252105652031[45] = 0;
   out_2220271252105652031[46] = 0;
   out_2220271252105652031[47] = 0;
   out_2220271252105652031[48] = 0;
   out_2220271252105652031[49] = 1;
   out_2220271252105652031[50] = 0;
   out_2220271252105652031[51] = 0;
   out_2220271252105652031[52] = 0;
   out_2220271252105652031[53] = 0;
   out_2220271252105652031[54] = 0;
   out_2220271252105652031[55] = 0;
   out_2220271252105652031[56] = 0;
   out_2220271252105652031[57] = 0;
   out_2220271252105652031[58] = 0;
   out_2220271252105652031[59] = 0;
   out_2220271252105652031[60] = 0;
   out_2220271252105652031[61] = 0;
   out_2220271252105652031[62] = 0;
   out_2220271252105652031[63] = 0;
   out_2220271252105652031[64] = 0;
   out_2220271252105652031[65] = 0;
   out_2220271252105652031[66] = 0;
   out_2220271252105652031[67] = 0;
   out_2220271252105652031[68] = 0;
   out_2220271252105652031[69] = 0;
   out_2220271252105652031[70] = 0;
   out_2220271252105652031[71] = 0;
   out_2220271252105652031[72] = 1;
   out_2220271252105652031[73] = 0;
   out_2220271252105652031[74] = 0;
   out_2220271252105652031[75] = 0;
   out_2220271252105652031[76] = 0;
   out_2220271252105652031[77] = 0;
   out_2220271252105652031[78] = 0;
   out_2220271252105652031[79] = 0;
   out_2220271252105652031[80] = 0;
   out_2220271252105652031[81] = 0;
   out_2220271252105652031[82] = 0;
   out_2220271252105652031[83] = 0;
   out_2220271252105652031[84] = 0;
   out_2220271252105652031[85] = 0;
   out_2220271252105652031[86] = 0;
   out_2220271252105652031[87] = 0;
}
void h_13(double *state, double *unused, double *out_3624310307560900385) {
   out_3624310307560900385[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3624310307560900385[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3624310307560900385[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_646674378183793147) {
   out_646674378183793147[0] = 0;
   out_646674378183793147[1] = 0;
   out_646674378183793147[2] = 0;
   out_646674378183793147[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_646674378183793147[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_646674378183793147[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_646674378183793147[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_646674378183793147[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_646674378183793147[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_646674378183793147[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_646674378183793147[10] = 0;
   out_646674378183793147[11] = 0;
   out_646674378183793147[12] = 0;
   out_646674378183793147[13] = 0;
   out_646674378183793147[14] = 0;
   out_646674378183793147[15] = 0;
   out_646674378183793147[16] = 0;
   out_646674378183793147[17] = 0;
   out_646674378183793147[18] = 0;
   out_646674378183793147[19] = 0;
   out_646674378183793147[20] = 0;
   out_646674378183793147[21] = 0;
   out_646674378183793147[22] = 0;
   out_646674378183793147[23] = 0;
   out_646674378183793147[24] = 0;
   out_646674378183793147[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_646674378183793147[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_646674378183793147[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_646674378183793147[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_646674378183793147[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_646674378183793147[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_646674378183793147[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_646674378183793147[32] = 0;
   out_646674378183793147[33] = 0;
   out_646674378183793147[34] = 0;
   out_646674378183793147[35] = 0;
   out_646674378183793147[36] = 0;
   out_646674378183793147[37] = 0;
   out_646674378183793147[38] = 0;
   out_646674378183793147[39] = 0;
   out_646674378183793147[40] = 0;
   out_646674378183793147[41] = 0;
   out_646674378183793147[42] = 0;
   out_646674378183793147[43] = 0;
   out_646674378183793147[44] = 0;
   out_646674378183793147[45] = 0;
   out_646674378183793147[46] = 0;
   out_646674378183793147[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_646674378183793147[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_646674378183793147[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_646674378183793147[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_646674378183793147[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_646674378183793147[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_646674378183793147[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_646674378183793147[54] = 0;
   out_646674378183793147[55] = 0;
   out_646674378183793147[56] = 0;
   out_646674378183793147[57] = 0;
   out_646674378183793147[58] = 0;
   out_646674378183793147[59] = 0;
   out_646674378183793147[60] = 0;
   out_646674378183793147[61] = 0;
   out_646674378183793147[62] = 0;
   out_646674378183793147[63] = 0;
   out_646674378183793147[64] = 0;
   out_646674378183793147[65] = 0;
}
void h_14(double *state, double *unused, double *out_7516788848090321369) {
   out_7516788848090321369[0] = state[10];
   out_7516788848090321369[1] = state[11];
   out_7516788848090321369[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1036365943578105169) {
   out_1036365943578105169[0] = 0;
   out_1036365943578105169[1] = 0;
   out_1036365943578105169[2] = 0;
   out_1036365943578105169[3] = 0;
   out_1036365943578105169[4] = 0;
   out_1036365943578105169[5] = 0;
   out_1036365943578105169[6] = 0;
   out_1036365943578105169[7] = 0;
   out_1036365943578105169[8] = 0;
   out_1036365943578105169[9] = 0;
   out_1036365943578105169[10] = 1;
   out_1036365943578105169[11] = 0;
   out_1036365943578105169[12] = 0;
   out_1036365943578105169[13] = 0;
   out_1036365943578105169[14] = 0;
   out_1036365943578105169[15] = 0;
   out_1036365943578105169[16] = 0;
   out_1036365943578105169[17] = 0;
   out_1036365943578105169[18] = 0;
   out_1036365943578105169[19] = 0;
   out_1036365943578105169[20] = 0;
   out_1036365943578105169[21] = 0;
   out_1036365943578105169[22] = 0;
   out_1036365943578105169[23] = 0;
   out_1036365943578105169[24] = 0;
   out_1036365943578105169[25] = 0;
   out_1036365943578105169[26] = 0;
   out_1036365943578105169[27] = 0;
   out_1036365943578105169[28] = 0;
   out_1036365943578105169[29] = 0;
   out_1036365943578105169[30] = 0;
   out_1036365943578105169[31] = 0;
   out_1036365943578105169[32] = 0;
   out_1036365943578105169[33] = 1;
   out_1036365943578105169[34] = 0;
   out_1036365943578105169[35] = 0;
   out_1036365943578105169[36] = 0;
   out_1036365943578105169[37] = 0;
   out_1036365943578105169[38] = 0;
   out_1036365943578105169[39] = 0;
   out_1036365943578105169[40] = 0;
   out_1036365943578105169[41] = 0;
   out_1036365943578105169[42] = 0;
   out_1036365943578105169[43] = 0;
   out_1036365943578105169[44] = 0;
   out_1036365943578105169[45] = 0;
   out_1036365943578105169[46] = 0;
   out_1036365943578105169[47] = 0;
   out_1036365943578105169[48] = 0;
   out_1036365943578105169[49] = 0;
   out_1036365943578105169[50] = 0;
   out_1036365943578105169[51] = 0;
   out_1036365943578105169[52] = 0;
   out_1036365943578105169[53] = 0;
   out_1036365943578105169[54] = 0;
   out_1036365943578105169[55] = 0;
   out_1036365943578105169[56] = 1;
   out_1036365943578105169[57] = 0;
   out_1036365943578105169[58] = 0;
   out_1036365943578105169[59] = 0;
   out_1036365943578105169[60] = 0;
   out_1036365943578105169[61] = 0;
   out_1036365943578105169[62] = 0;
   out_1036365943578105169[63] = 0;
   out_1036365943578105169[64] = 0;
   out_1036365943578105169[65] = 0;
}
void h_33(double *state, double *unused, double *out_5817128039764809933) {
   out_5817128039764809933[0] = state[16];
   out_5817128039764809933[1] = state[17];
   out_5817128039764809933[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5239663471803769166) {
   out_5239663471803769166[0] = 0;
   out_5239663471803769166[1] = 0;
   out_5239663471803769166[2] = 0;
   out_5239663471803769166[3] = 0;
   out_5239663471803769166[4] = 0;
   out_5239663471803769166[5] = 0;
   out_5239663471803769166[6] = 0;
   out_5239663471803769166[7] = 0;
   out_5239663471803769166[8] = 0;
   out_5239663471803769166[9] = 0;
   out_5239663471803769166[10] = 0;
   out_5239663471803769166[11] = 0;
   out_5239663471803769166[12] = 0;
   out_5239663471803769166[13] = 0;
   out_5239663471803769166[14] = 0;
   out_5239663471803769166[15] = 0;
   out_5239663471803769166[16] = 1;
   out_5239663471803769166[17] = 0;
   out_5239663471803769166[18] = 0;
   out_5239663471803769166[19] = 0;
   out_5239663471803769166[20] = 0;
   out_5239663471803769166[21] = 0;
   out_5239663471803769166[22] = 0;
   out_5239663471803769166[23] = 0;
   out_5239663471803769166[24] = 0;
   out_5239663471803769166[25] = 0;
   out_5239663471803769166[26] = 0;
   out_5239663471803769166[27] = 0;
   out_5239663471803769166[28] = 0;
   out_5239663471803769166[29] = 0;
   out_5239663471803769166[30] = 0;
   out_5239663471803769166[31] = 0;
   out_5239663471803769166[32] = 0;
   out_5239663471803769166[33] = 0;
   out_5239663471803769166[34] = 0;
   out_5239663471803769166[35] = 0;
   out_5239663471803769166[36] = 0;
   out_5239663471803769166[37] = 0;
   out_5239663471803769166[38] = 0;
   out_5239663471803769166[39] = 1;
   out_5239663471803769166[40] = 0;
   out_5239663471803769166[41] = 0;
   out_5239663471803769166[42] = 0;
   out_5239663471803769166[43] = 0;
   out_5239663471803769166[44] = 0;
   out_5239663471803769166[45] = 0;
   out_5239663471803769166[46] = 0;
   out_5239663471803769166[47] = 0;
   out_5239663471803769166[48] = 0;
   out_5239663471803769166[49] = 0;
   out_5239663471803769166[50] = 0;
   out_5239663471803769166[51] = 0;
   out_5239663471803769166[52] = 0;
   out_5239663471803769166[53] = 0;
   out_5239663471803769166[54] = 0;
   out_5239663471803769166[55] = 0;
   out_5239663471803769166[56] = 0;
   out_5239663471803769166[57] = 0;
   out_5239663471803769166[58] = 0;
   out_5239663471803769166[59] = 0;
   out_5239663471803769166[60] = 0;
   out_5239663471803769166[61] = 0;
   out_5239663471803769166[62] = 1;
   out_5239663471803769166[63] = 0;
   out_5239663471803769166[64] = 0;
   out_5239663471803769166[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5763660217246419227) {
  H(in_vec, out_5763660217246419227);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7984073142007517775) {
  err_fun(nom_x, delta_x, out_7984073142007517775);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4505929681771980701) {
  inv_err_fun(nom_x, true_x, out_4505929681771980701);
}
void live_H_mod_fun(double *state, double *out_1600126465576552008) {
  H_mod_fun(state, out_1600126465576552008);
}
void live_f_fun(double *state, double dt, double *out_4714363137519275674) {
  f_fun(state,  dt, out_4714363137519275674);
}
void live_F_fun(double *state, double dt, double *out_6365999196697241563) {
  F_fun(state,  dt, out_6365999196697241563);
}
void live_h_4(double *state, double *unused, double *out_8654380828745342908) {
  h_4(state, unused, out_8654380828745342908);
}
void live_H_4(double *state, double *unused, double *out_1277555590207695814) {
  H_4(state, unused, out_1277555590207695814);
}
void live_h_9(double *state, double *unused, double *out_7516788848090321369) {
  h_9(state, unused, out_7516788848090321369);
}
void live_H_9(double *state, double *unused, double *out_1036365943578105169) {
  H_9(state, unused, out_1036365943578105169);
}
void live_h_10(double *state, double *unused, double *out_5089843156482325694) {
  h_10(state, unused, out_5089843156482325694);
}
void live_H_10(double *state, double *unused, double *out_1789498124346718583) {
  H_10(state, unused, out_1789498124346718583);
}
void live_h_12(double *state, double *unused, double *out_2468563075831269207) {
  h_12(state, unused, out_2468563075831269207);
}
void live_H_12(double *state, double *unused, double *out_3741900817824265981) {
  H_12(state, unused, out_3741900817824265981);
}
void live_h_35(double *state, double *unused, double *out_9035519326057673557) {
  h_35(state, unused, out_9035519326057673557);
}
void live_H_35(double *state, double *unused, double *out_6487463850149279690) {
  H_35(state, unused, out_6487463850149279690);
}
void live_h_32(double *state, double *unused, double *out_2998224959805740489) {
  h_32(state, unused, out_2998224959805740489);
}
void live_H_32(double *state, double *unused, double *out_2220271252105652031) {
  H_32(state, unused, out_2220271252105652031);
}
void live_h_13(double *state, double *unused, double *out_3624310307560900385) {
  h_13(state, unused, out_3624310307560900385);
}
void live_H_13(double *state, double *unused, double *out_646674378183793147) {
  H_13(state, unused, out_646674378183793147);
}
void live_h_14(double *state, double *unused, double *out_7516788848090321369) {
  h_14(state, unused, out_7516788848090321369);
}
void live_H_14(double *state, double *unused, double *out_1036365943578105169) {
  H_14(state, unused, out_1036365943578105169);
}
void live_h_33(double *state, double *unused, double *out_5817128039764809933) {
  h_33(state, unused, out_5817128039764809933);
}
void live_H_33(double *state, double *unused, double *out_5239663471803769166) {
  H_33(state, unused, out_5239663471803769166);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
